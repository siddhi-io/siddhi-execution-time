{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Siddhi Execution Time The siddhi-execution-time extension is a Siddhi extension that provides time related functionality such as getting current time, current date, manipulating/formatting dates, etc. For information on Siddhi and it's features refer Siddhi Documentation . Download Versions 5.x and above with group id io.siddhi.extension.* from here . Versions 4.x and lower with group id org.wso2.extension.siddhi.* from here . Latest API Docs Latest API Docs is 5.0.7 . Features currentDate ( Function ) Function returns the system time in yyyy-MM-dd format. currentTime ( Function ) Function returns system time in the HH:mm:ss format. currentTimestamp ( Function ) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. date ( Function ) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. dateAdd ( Function ) Adds the specified time interval to a date. dateDiff ( Function ) Returns difference between two dates in days. dateFormat ( Function ) Formats the data in string or milliseconds format to the given date format. dateSub ( Function ) Subtracts the specified time interval from the given date. dayOfWeek ( Function ) Extracts the day on which a given date falls. extract ( Function ) Function extracts a date unit from the date. timestampInMilliseconds ( Function ) Returns the system time or the given time in milliseconds. timezoneConvert ( Function ) Converts source datetime to provided target timezone and return the datetime string utcTimestamp ( Function ) Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Dependencies There are no other dependencies needed for this extension. Installation For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions . Support and Contribution We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Information"},{"location":"#siddhi-execution-time","text":"The siddhi-execution-time extension is a Siddhi extension that provides time related functionality such as getting current time, current date, manipulating/formatting dates, etc. For information on Siddhi and it's features refer Siddhi Documentation .","title":"Siddhi Execution Time"},{"location":"#download","text":"Versions 5.x and above with group id io.siddhi.extension.* from here . Versions 4.x and lower with group id org.wso2.extension.siddhi.* from here .","title":"Download"},{"location":"#latest-api-docs","text":"Latest API Docs is 5.0.7 .","title":"Latest API Docs"},{"location":"#features","text":"currentDate ( Function ) Function returns the system time in yyyy-MM-dd format. currentTime ( Function ) Function returns system time in the HH:mm:ss format. currentTimestamp ( Function ) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. date ( Function ) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. dateAdd ( Function ) Adds the specified time interval to a date. dateDiff ( Function ) Returns difference between two dates in days. dateFormat ( Function ) Formats the data in string or milliseconds format to the given date format. dateSub ( Function ) Subtracts the specified time interval from the given date. dayOfWeek ( Function ) Extracts the day on which a given date falls. extract ( Function ) Function extracts a date unit from the date. timestampInMilliseconds ( Function ) Returns the system time or the given time in milliseconds. timezoneConvert ( Function ) Converts source datetime to provided target timezone and return the datetime string utcTimestamp ( Function ) Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided.","title":"Features"},{"location":"#dependencies","text":"There are no other dependencies needed for this extension.","title":"Dependencies"},{"location":"#installation","text":"For installing this extension on various siddhi execution environments refer Siddhi documentation section on adding extensions .","title":"Installation"},{"location":"#support-and-contribution","text":"We encourage users to ask questions and get support via StackOverflow , make sure to add the siddhi tag to the issue for better response. If you find any issues related to the extension please report them on the issue tracker . For production support and other contribution related information refer Siddhi Community documentation.","title":"Support and Contribution"},{"location":"license/","text":"Copyright (c) 2019 WSO2 Inc. ( http://www.wso2.org ) All Rights Reserved. WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ------------------------------------------------------------------------- Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS","title":"License"},{"location":"api/4.0.10/","text":"API Docs - v4.0.10 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.10"},{"location":"api/4.0.10/#api-docs-v4010","text":"","title":"API Docs - v4.0.10"},{"location":"api/4.0.10/#time","text":"","title":"Time"},{"location":"api/4.0.10/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.10/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.10/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.10/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.10/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.10/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.10/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.10/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.10/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.10/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.10/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.10/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.11/","text":"API Docs - v4.0.11 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.11"},{"location":"api/4.0.11/#api-docs-v4011","text":"","title":"API Docs - v4.0.11"},{"location":"api/4.0.11/#time","text":"","title":"Time"},{"location":"api/4.0.11/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.11/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.11/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.11/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.11/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.11/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.11/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.11/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.11/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.11/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.11/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.11/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.12/","text":"API Docs - v4.0.12 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.12"},{"location":"api/4.0.12/#api-docs-v4012","text":"","title":"API Docs - v4.0.12"},{"location":"api/4.0.12/#time","text":"","title":"Time"},{"location":"api/4.0.12/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.12/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.12/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.12/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.12/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.12/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.12/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.12/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.12/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.12/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.12/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.12/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.13/","text":"API Docs - v4.0.13 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.13"},{"location":"api/4.0.13/#api-docs-v4013","text":"","title":"API Docs - v4.0.13"},{"location":"api/4.0.13/#time","text":"","title":"Time"},{"location":"api/4.0.13/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.13/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.13/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.13/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.13/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.13/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.13/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.13/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.13/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.13/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.13/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.13/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.14/","text":"API Docs - v4.0.14 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.14"},{"location":"api/4.0.14/#api-docs-v4014","text":"","title":"API Docs - v4.0.14"},{"location":"api/4.0.14/#time","text":"","title":"Time"},{"location":"api/4.0.14/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.14/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.14/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.14/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.14/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.14/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.14/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.14/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.14/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.14/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.14/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.14/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.15/","text":"API Docs - v4.0.15 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.15"},{"location":"api/4.0.15/#api-docs-v4015","text":"","title":"API Docs - v4.0.15"},{"location":"api/4.0.15/#time","text":"","title":"Time"},{"location":"api/4.0.15/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.15/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.15/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.15/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.15/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.15/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.15/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.15/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.15/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.15/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.15/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.15/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.16/","text":"API Docs - v4.0.16 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.16"},{"location":"api/4.0.16/#api-docs-v4016","text":"","title":"API Docs - v4.0.16"},{"location":"api/4.0.16/#time","text":"","title":"Time"},{"location":"api/4.0.16/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.16/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.16/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.16/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.16/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.16/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.16/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.16/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.16/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.16/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.16/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.16/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.17/","text":"API Docs - v4.0.17 Time currentDate (Function) This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format. currentTime (Function) This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'. currentTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. date (Function) This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'. dateAdd (Function) This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol. dateDiff (Function) This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'. dateFormat (Function) This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'. dateSub (Function) This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol. dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'. extract (Function) This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'. timestampInMilliseconds (Function) This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'. utcTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"4.0.17"},{"location":"api/4.0.17/#api-docs-v4017","text":"","title":"API Docs - v4.0.17"},{"location":"api/4.0.17/#time","text":"","title":"Time"},{"location":"api/4.0.17/#currentdate-function","text":"This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format.","title":"currentDate (Function)"},{"location":"api/4.0.17/#currenttime-function","text":"This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'.","title":"currentTime (Function)"},{"location":"api/4.0.17/#currenttimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'.","title":"currentTimestamp (Function)"},{"location":"api/4.0.17/#date-function","text":"This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'.","title":"date (Function)"},{"location":"api/4.0.17/#dateadd-function","text":"This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol.","title":"dateAdd (Function)"},{"location":"api/4.0.17/#datediff-function","text":"This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'.","title":"dateDiff (Function)"},{"location":"api/4.0.17/#dateformat-function","text":"This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'.","title":"dateFormat (Function)"},{"location":"api/4.0.17/#datesub-function","text":"This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol.","title":"dateSub (Function)"},{"location":"api/4.0.17/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'.","title":"dayOfWeek (Function)"},{"location":"api/4.0.17/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'.","title":"extract (Function)"},{"location":"api/4.0.17/#timestampinmilliseconds-function","text":"This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'.","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.17/#utctimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"utcTimestamp (Function)"},{"location":"api/4.0.5/","text":"API Docs - v4.0.5 Time currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.5"},{"location":"api/4.0.5/#api-docs-v405","text":"","title":"API Docs - v4.0.5"},{"location":"api/4.0.5/#time","text":"","title":"Time"},{"location":"api/4.0.5/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.5/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.5/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.5/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.5/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.5/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.5/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.5/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.5/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.5/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.5/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.5/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.6/","text":"API Docs - v4.0.6 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.6"},{"location":"api/4.0.6/#api-docs-v406","text":"","title":"API Docs - v4.0.6"},{"location":"api/4.0.6/#time","text":"","title":"Time"},{"location":"api/4.0.6/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.6/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.6/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.6/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.6/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.6/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.6/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.6/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.6/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.6/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.6/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.6/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.7/","text":"API Docs - v4.0.7 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.7"},{"location":"api/4.0.7/#api-docs-v407","text":"","title":"API Docs - v4.0.7"},{"location":"api/4.0.7/#time","text":"","title":"Time"},{"location":"api/4.0.7/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.7/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.7/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.7/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.7/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.7/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.7/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.7/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.7/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.7/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.7/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.7/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.8/","text":"API Docs - v4.0.8 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.8"},{"location":"api/4.0.8/#api-docs-v408","text":"","title":"API Docs - v4.0.8"},{"location":"api/4.0.8/#time","text":"","title":"Time"},{"location":"api/4.0.8/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.8/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.8/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.8/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.8/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.8/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.8/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.8/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.8/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.8/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.8/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.8/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.0.9/","text":"API Docs - v4.0.9 Time currentDate (Function) This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream currentTime (Function) This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream currentTimestamp (Function) This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream date (Function) This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream. dateAdd (Function) This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol dateDiff (Function) This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value dateFormat (Function) This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream. dateSub (Function) This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream. extract (Function) This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream. timestampInMilliseconds (Function) This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream utcTimestamp (Function) This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"4.0.9"},{"location":"api/4.0.9/#api-docs-v409","text":"","title":"API Docs - v4.0.9"},{"location":"api/4.0.9/#time","text":"","title":"Time"},{"location":"api/4.0.9/#currentdate-function","text":"This function returns system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentDate() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent date of the system in yyyy-MM-dd format as current time to the outputStream","title":"currentDate (Function)"},{"location":"api/4.0.9/#currenttime-function","text":"This function returns system time in in HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTime() as currentTime insert into outputStream; This query returns symbol from inputStream andcurrent time of the system in HH:mm:ss format as current time to the outputStream","title":"currentTime (Function)"},{"location":"api/4.0.9/#currenttimestamp-function","text":"This function returns system time in yyyy-MM-dd HH:mm:ss format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:currentTimestamp() as currentTimestamp insert into outputStream; This query returns symbol from inputStream andcurrent time stamp of the system in yyyy-MM-dd HH:mm:ss format as currentTimestamp to the outputStream","title":"currentTimestamp (Function)"},{"location":"api/4.0.9/#date-function","text":"This function returns date part from a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into outputStream; This query extracts the date value from the dateValue which is in format'dateFormat' as the dateExtracted and return symbol, and dateExtracted to the outputStream.","title":"date (Function)"},{"location":"api/4.0.9/#dateadd-function","text":"This function returns added specified time interval to a date.If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into outputStream; This query gets date value from the input stream, adds expr amount to the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearAdded with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, adds expr amount of hours to it and return resultant value in milliseconds as hourAddedMills into the outputStream with the symbol","title":"dateAdd (Function)"},{"location":"api/4.0.9/#datediff-function","text":"This function returns time(days) between two dates. If two STRING arguments are sent as first two parameters then function should accept four parameters with last two as optional parameters. Parameter order should be dateDiff(date.value1,date.value2,date.format1,date.format2). Else if two LONG arguments are sent as first two parameters then parameter order should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.value2 value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format1 Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 Date format of the provided date.value2. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No timestamp.in.milliseconds2 date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from inputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into outputStream; This query return difference between timestampInMilliseconds1 and timestampInMilliseconds2 as dateDifferenceInMilliseconds and difference between dataValue1 which is in the format 'dateFormat1' and dataValue2 which isin the format 'dateFormat2' as dateDifference and return to the outputStream with symbol value","title":"dateDiff (Function)"},{"location":"api/4.0.9/#dateformat-function","text":"This function returns a formatted date string.If the first argument is a STRING then function accepts three parameters with last parameter as a optional parameter.Parameter order should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Else if first argument is a LONG then function accepts two parameters.Parameter order should be dateFormat(timestampInMilliseconds,dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format Date format which need to be converted to. eg: yyyy/MM/dd HH:mm:ss. STRING No No date.source.format Date format of the provided date.value1. eg: yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L. LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from inputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into outputStream; This query formats the dateValue in the inputStream which is currently in sourceFormat to the targetFormat as formattedData and formats timestampInMilliseconds which is in millisecond to the targetFormat as formattedUnixDate then return symbol formattedDate and formattedUnixDate to the outputStream.","title":"dateFormat (Function)"},{"location":"api/4.0.9/#datesub-function","text":"This function returns subtracted specified time interval to a date. If a STRING parameter passed as the first argument then function accepts four parameters with last as optional which is the date.format. If a LONG parameter passed as the first argument, then function accepts three parameters which are timestamp.in.milliseconds,expr,unit in order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr In which amount, selected date format part should be incremented. eg: 2 ,5 ,10 etc. INT No No unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,expr int); from inputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into outputStream; This query gets date value from the input stream, subtract expr amount from the year value of the date value, format resultant value as date format given in the input stream and finally return the formatted value to the outputStream as yearSubtracted with the symbol EXAMPLE 2 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into outputStream; This query gets value of timestampInMilliseconds from the input stream, subtract expr amount of hours from it and return resultant value in milliseconds as hourSubtractedMills into the outputStream with the symbol","title":"dateSub (Function)"},{"location":"api/4.0.9/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, dateValue string,dateFormat string); from inputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into outputStream; The Query extract the day of the week from the date given as dateValue which isin the format 'dateFormat' and return symbol and extracted day as dayOfWeekExtractedto the outputStream.","title":"dayOfWeek (Function)"},{"location":"api/4.0.9/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is a STRING then the function will accept three arguments with last parameter as optional which is date.format.Parameter order should be extract(unit,date.value,date.format). Else if the first argument passed is a LONG then function accepts two parameters.Parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit Which part of the date format you want to manipulate. eg: \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds date value in milliseconds.(from the epoch) eg: 1415712224000L LONG No No Examples EXAMPLE 1 define stream inputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from inputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into outputStream; This query extracts the year value from the dateValue which is in format'dateFormat' as the YEAR, hours from timestampInMilliseconds as HOUR and return symbol, YEAR and HOUR to the outputStream.","title":"extract (Function)"},{"location":"api/4.0.9/#timestampinmilliseconds-function","text":"This function returns system time or given time in milliseconds.If two STRING parameters are sent as the first argument, the parameter order should be timestampInMilliseconds(date.value,date.format) with last parameter as the optional parameter with is date.format.Else if no argument method invoked then system time will be returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value value of date. eg: \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format Date format of the provided date value. eg: yyyy-MM-dd HH:mm:ss.SSS yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into outputStream; The query convert the 2007-11-30 10:30:19 which is in yyyy-MM-DD HH:MM:SS format to the milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream EXAMPLE 2 define stream inputStream (symbol string, price long, volume long); from inputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into outputStream; The query get the system time in milliseconds as timestampInMilliseconds and return symbol and timestampInMilliseconds to the output stream","title":"timestampInMilliseconds (Function)"},{"location":"api/4.0.9/#utctimestamp-function","text":"This function returns System time in yyyy-MM-dd HH:mm:ss format Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream inputStream (symbol string, price long, volume long);from inputStream select symbol , time:utcTimestamp() as utcTimestamp insert into outputStream; The query return symbol from the inputStream and system time stamp in yyyy-MM-dd HH:mm:ss format as utcTimestamp to the outputStream.","title":"utcTimestamp (Function)"},{"location":"api/4.1.0/","text":"API Docs - v4.1.0 Time currentDate (Function) This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format. currentTime (Function) This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'. currentTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. date (Function) This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'. dateAdd (Function) This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol. dateDiff (Function) This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'. dateFormat (Function) This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'. dateSub (Function) This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol. dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'. extract (Function) This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'. timestampInMilliseconds (Function) This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'. utcTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"4.1.0"},{"location":"api/4.1.0/#api-docs-v410","text":"","title":"API Docs - v4.1.0"},{"location":"api/4.1.0/#time","text":"","title":"Time"},{"location":"api/4.1.0/#currentdate-function","text":"This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format.","title":"currentDate (Function)"},{"location":"api/4.1.0/#currenttime-function","text":"This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'.","title":"currentTime (Function)"},{"location":"api/4.1.0/#currenttimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'.","title":"currentTimestamp (Function)"},{"location":"api/4.1.0/#date-function","text":"This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'.","title":"date (Function)"},{"location":"api/4.1.0/#dateadd-function","text":"This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol.","title":"dateAdd (Function)"},{"location":"api/4.1.0/#datediff-function","text":"This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'.","title":"dateDiff (Function)"},{"location":"api/4.1.0/#dateformat-function","text":"This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'.","title":"dateFormat (Function)"},{"location":"api/4.1.0/#datesub-function","text":"This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol.","title":"dateSub (Function)"},{"location":"api/4.1.0/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'.","title":"dayOfWeek (Function)"},{"location":"api/4.1.0/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'.","title":"extract (Function)"},{"location":"api/4.1.0/#timestampinmilliseconds-function","text":"This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'.","title":"timestampInMilliseconds (Function)"},{"location":"api/4.1.0/#utctimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"utcTimestamp (Function)"},{"location":"api/4.1.1/","text":"API Docs - v4.1.1 Time currentDate (Function) This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format. currentTime (Function) This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'. currentTimestamp (Function) If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. date (Function) This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'. dateAdd (Function) This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol. dateDiff (Function) This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'. dateFormat (Function) This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'. dateSub (Function) This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol. dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'. extract (Function) This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'. timestampInMilliseconds (Function) This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'. utcTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"4.1.1"},{"location":"api/4.1.1/#api-docs-v411","text":"","title":"API Docs - v4.1.1"},{"location":"api/4.1.1/#time","text":"","title":"Time"},{"location":"api/4.1.1/#currentdate-function","text":"This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format.","title":"currentDate (Function)"},{"location":"api/4.1.1/#currenttime-function","text":"This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'.","title":"currentTime (Function)"},{"location":"api/4.1.1/#currenttimestamp-function","text":"If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'.","title":"currentTimestamp (Function)"},{"location":"api/4.1.1/#date-function","text":"This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'.","title":"date (Function)"},{"location":"api/4.1.1/#dateadd-function","text":"This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol.","title":"dateAdd (Function)"},{"location":"api/4.1.1/#datediff-function","text":"This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'.","title":"dateDiff (Function)"},{"location":"api/4.1.1/#dateformat-function","text":"This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'.","title":"dateFormat (Function)"},{"location":"api/4.1.1/#datesub-function","text":"This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol.","title":"dateSub (Function)"},{"location":"api/4.1.1/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'.","title":"dayOfWeek (Function)"},{"location":"api/4.1.1/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'.","title":"extract (Function)"},{"location":"api/4.1.1/#timestampinmilliseconds-function","text":"This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'.","title":"timestampInMilliseconds (Function)"},{"location":"api/4.1.1/#utctimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"utcTimestamp (Function)"},{"location":"api/5.0.0/","text":"API Docs - v5.0.0 Time currentDate (Function) This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format. currentTime (Function) This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'. currentTimestamp (Function) If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. date (Function) This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'. dateAdd (Function) This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol. dateDiff (Function) This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'. dateFormat (Function) This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'. dateSub (Function) This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol. dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'. extract (Function) This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'. timestampInMilliseconds (Function) This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'. utcTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"5.0.0"},{"location":"api/5.0.0/#api-docs-v500","text":"","title":"API Docs - v5.0.0"},{"location":"api/5.0.0/#time","text":"","title":"Time"},{"location":"api/5.0.0/#currentdate-function","text":"This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format.","title":"currentDate (Function)"},{"location":"api/5.0.0/#currenttime-function","text":"This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'.","title":"currentTime (Function)"},{"location":"api/5.0.0/#currenttimestamp-function","text":"If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'.","title":"currentTimestamp (Function)"},{"location":"api/5.0.0/#date-function","text":"This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'.","title":"date (Function)"},{"location":"api/5.0.0/#dateadd-function","text":"This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol.","title":"dateAdd (Function)"},{"location":"api/5.0.0/#datediff-function","text":"This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'.","title":"dateDiff (Function)"},{"location":"api/5.0.0/#dateformat-function","text":"This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'.","title":"dateFormat (Function)"},{"location":"api/5.0.0/#datesub-function","text":"This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol.","title":"dateSub (Function)"},{"location":"api/5.0.0/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'.","title":"dayOfWeek (Function)"},{"location":"api/5.0.0/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'.","title":"extract (Function)"},{"location":"api/5.0.0/#timestampinmilliseconds-function","text":"This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'.","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.0/#utctimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"utcTimestamp (Function)"},{"location":"api/5.0.1/","text":"API Docs - v5.0.1 Time currentDate (Function) This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format. currentTime (Function) This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'. currentTimestamp (Function) If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. date (Function) This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'. dateAdd (Function) This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol. dateDiff (Function) This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'. dateFormat (Function) This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'. dateSub (Function) This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol. dayOfWeek (Function) This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'. extract (Function) This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'. timestampInMilliseconds (Function) This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'. utcTimestamp (Function) This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"5.0.1"},{"location":"api/5.0.1/#api-docs-v501","text":"","title":"API Docs - v5.0.1"},{"location":"api/5.0.1/#time","text":"","title":"Time"},{"location":"api/5.0.1/#currentdate-function","text":"This function returns the system time in 'yyyy-MM-dd' format. Syntax STRING time:currentDate() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentDate() as currentTime insert into OutputStream; This query returns 'symbol' from the 'InputStream' and the current date and time, to the 'OutputStream'.It returns the current date in the 'yyyy-MM-dd' format.","title":"currentDate (Function)"},{"location":"api/5.0.1/#currenttime-function","text":"This function returns system time in the 'HH:mm:ss' format. Syntax STRING time:currentTime() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTime() as currentTime insert into OutputStream; This query returns, the symbol from the 'InputStream' andthe current time of the system in 'HH:mm:ss' format as current time,to the 'OutputStream'.","title":"currentTime (Function)"},{"location":"api/5.0.1/#currenttimestamp-function","text":"If no argument is provided, this function will return the currentSystemTime and if the timezone is provided as an argument, it will convert the current systemtime to the given timezone and return. This function returns time in 'yyyy-MM-dd HH:mm:ss' format. To check the available timezone ids, visit https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html Syntax STRING time:currentTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp() as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( Asia/Kolkata ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to Asia/Kolkata timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'. EXAMPLE 3 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:currentTimestamp( CST ) as currentTimestamp insert into OutputStream; This query returns, symbol from the 'InputStream' and the current time stamp of the system which is converted to CST timezone, in 'yyyy-MM-dd HH:mm:ss' format as 'currentTimestamp', to the 'OutputStream'.","title":"currentTimestamp (Function)"},{"location":"api/5.0.1/#date-function","text":"This function returns the date part of a date or date/time expression. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:date(dateValue,dateFormat) as dateExtracted insert into OutputStream; This query extracts the 'dateValue' in the 'dateFormat' format as the 'dateExtracted'. The query then returns the symbol and the 'dateExtracted' to the 'OutputStream'.","title":"date (Function)"},{"location":"api/5.0.1/#dateadd-function","text":"This function returns the specified time interval added to a date.If a parameter of 'STRING' type is passed as the first argument, the function accepts four parameters with the last parameter, i.e., 'dateFormat', as an optional one. If a parameter of 'LONG' type is passed as the first argument, the function accepts three parameters, i.e., 'timestampInMilliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date.For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr This is the amount by which the selected part of the date should be incremented.For example, 2 ,5 ,10, etc. INT No No unit This is the part of the date that needs to be modified.For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearAdded insert into OutputStream; This query gets the date value from the 'InputStream, increments the 'YEAR' value of it by the 'expr' value given, formats the resultant value into the 'dateFormat' format given in the input stream and returns the formatted value to the 'OutputStream' as 'yearAdded', with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from inputStream time:dateAdd(timestampInMilliseconds,expr,'HOUR') as hourAddedMills insert into outputStream; This query gets the value of the 'timestampInMilliseconds' attribute from the input stream, adds the 'expr' number of hours to it and returns the resultant value in milliseconds as 'hourAddedMills', into the 'OutputStream' with the symbol.","title":"dateAdd (Function)"},{"location":"api/5.0.1/#datediff-function","text":"This function returns the time in days, between two dates. Two arguments of 'String' type are sent as the first two parameters. The function can accept four parameters,the last two parameters corresponding to the date formats being optional ones. The order of the parameters should be dateDiff(date.value1,date.value2,date.format1,date.format2). Instead, if two arguments of 'Long' type are sent as the first two parameters, the order of the parameters should be dateDiff(timestamp.in.milliseconds1,timestamp.in.milliseconds2). Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The date value of the first parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.value2 The date value of the second parameter. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\", \"13:23:44.657\". STRING No No date.format1 The format of the date provided for the first parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the date provided for the second parameter, i.e., yyyy-MM-dd HH:mm:ss.SSS. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No timestamp.in.milliseconds2 The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue1 string,dateFormat1 string,dateValue2 string,dateFormat2 string,); from InputStream time:dateDiff(timestampInMilliseconds1,timestampInMilliseconds2)select symbol , time:dateDiff(dateValue1,dateValue2,dateFormat1,dateFormat2) as dateDifference, as dateDifferenceInMilliseconds insert into OutputStream; This query returns the difference between 'timestampInMilliseconds1' and 'timestampInMilliseconds2' as the 'dateDifferenceInMilliseconds' and the difference between 'dataValue1' which is in the format, 'dateFormat1' and 'dataValue2' which is in the format, 'dateFormat2', as 'dateDifference'. This function then redirects the results to the 'OutputStream'.","title":"dateDiff (Function)"},{"location":"api/5.0.1/#dateformat-function","text":"This function returns a formatted date string.If the first argument is of 'String' type, then the function accepts three parameters with the last parameter as an optional parameter.The order of the parameters should be dateFormat(dateValue,dateTargetFormat,dateSourceFormat). Instead, if the first argument is of 'Long' type, then it accepts two parameters.In this case, the order of the parameter should be dateFormat(timestampInMilliseconds, dateTargetFormat). Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.target.format The format of the date into which the date value needs to be converted. For example, 'yyyy/MM/dd HH:mm:ss'. STRING No No date.source.format The format in which the data value is present in the input stream.For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,sourceFormat string,timestampInMilliseconds long,targetFormat string); from InputStream select symboltime:dateFormat(dateValue,targetFormat,sourceFormat) as formattedDate,time:dateFormat(timestampInMilliseconds,targetFormat) as formattedUnixDate insert into OutputStream; This query formats the 'dateValue' in the 'InputStream' which is in the 'sourceFormat' to the 'targetFormat' as 'formattedData'. It also formats 'timestampInMilliseconds' which is in milliseconds to the 'targetFormat' as 'formattedUnixDate'. The function then returns the symbol 'formattedDate' and 'formattedUnixDate' to the 'OutputStream'.","title":"dateFormat (Function)"},{"location":"api/5.0.1/#datesub-function","text":"This function returns the date after subtracting a specified time interval from it. If a parameter of 'String' type is passed as the first argument, then the function accepts four parameters with the last parameter, i.e., 'date.format' as an optional one.If a parameter of 'Long' type is passed as the first argument, then the function accepts three parameters, i.e., 'timestamp.in.milliseconds', 'expr' and 'unit' in the given order. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No expr The amount by which the selected part of the date should be incremented. For example, 2 ,5 ,10, etc. INT No No unit The part of the date that is required to be modified. For example, \"MINUTE\" , \"HOUR\" , \"MONTH\" , \"YEAR\" , \"QUARTER\" , \"WEEK\" , \"DAY\" , \"SECOND\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS' yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,expr int); from InputStream select symbol , time:dateAdd(dateValue,expr,'YEAR',dateFormat) as yearSubtracted insert into OutputStream; This query gets the date value from the input stream, decrements the 'YEAR'value of the 'dateValue' by the 'expr' value given, formats the resultant value into the 'dateFormat' format in the input stream and returns the formatted value to the 'OutputStream' as 'yearSubtracted' with the symbol. EXAMPLE 2 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long,expr int); from InputStream time:dateSub(timestampInMilliseconds,expr,'HOUR') as hourSubtractedMills insert into OutputStream; This query gets the value of the 'timestampInMilliseconds' from the input stream, subtracts the 'expr' number of hours from it and returns the resultant value in milliseconds as 'hourSubtractedMills', to the 'OutputStream' with the symbol.","title":"dateSub (Function)"},{"location":"api/5.0.1/#dayofweek-function","text":"This function returns the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, dateValue string,dateFormat string); from InputStream select symbol,time:dayOfWeek(dateValue,dateFormat) as dayOfWeekExtracted insert into OutputStream; The Query extracts the day on which the date given as 'dateValue' in the 'dateFormat' format falls. It returns the symbol and the extracted day as 'dayOfWeekExtracted', to the 'OutputStream'.","title":"dayOfWeek (Function)"},{"location":"api/5.0.1/#extract-function","text":"This function returns date attributes from a date expression. If the first argument passed is of 'String' type then the function accepts three arguments with the last parameter, i.e., 'date.format' as an optional one. The order of the parameter is extract(unit,date.value,date.format). Instead, if the first argument passed is of 'Long' type, then the function accepts two parameters.In this case, the parameter order is extract(timestamp.in.milliseconds,unit). Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit The part of the date that needs to be manipulated. For example, \"MINUTE\", \"HOUR\", \"MONTH\", \"YEAR\", \"QUARTER\", \"WEEK\", \"DAY\", \"SECOND\". STRING No No date.value The value of date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L. LONG No No Examples EXAMPLE 1 define stream InputStream (symbol string,dateValue string,dateFormat string,timestampInMilliseconds long); from InputStream select symbol, time:extract('YEAR',dateValue,dateFormat) as YEAR,time:extract(timestampInMilliseconds,'HOUR') as HOUR insert into OutputStream; This query extracts the year value from the 'dateValue' as 'YEAR'. The 'dateValue' is in the 'dateFormat' format. It also extracts the hours from 'timestampInMilliseconds' as 'HOUR'. The query then returns the symbols, 'YEAR' and 'HOUR' to the 'OutputStream'.","title":"extract (Function)"},{"location":"api/5.0.1/#timestampinmilliseconds-function","text":"This function returns the system time or given time in milliseconds.If two parameters of 'String' type are sent as the first argument, the order of the parameters should be timestampInMilliseconds(date.value,date.format) with the last parameter, i.e., 'date.format', as the optional oneInstead, if no argument method is invoked, the system time is returned in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, \"2014-11-11 13:23:44.657\", \"2014-11-11\" , \"13:23:44.657\". STRING No No date.format The date format of the date value provided. For example, 'yyyy-MM-dd HH:mm:ss.SSS'. yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds('2007-11-30 10:30:19','yyyy-MM-DD HH:MM:SS') as timestampInMilliseconds insert into OutputStream; The query converts 2007-11-30 10:30:19 which is in 'yyyy-MM-DD HH:MM:SS' format to milliseconds as 'timestampInMilliseconds' and returns the symbol and 'timestampInMilliseconds' to the 'OutputStream'. EXAMPLE 2 define stream InputStream (symbol string, price long, volume long); from InputStream select symbol , time:timestampInMilliseconds()as timestampInMilliseconds insert into OutputStream; The query gets the system time in milliseconds as 'timestampInMilliseconds' and returns the symbol from the 'InputStream' and 'timestampInMilliseconds' to the 'OutputStream'.","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.1/#utctimestamp-function","text":"This function returns the system time in 'yyyy-MM-dd HH:mm:ss' format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 define stream InputStream (symbol string, price long, volume long);from InputStream select symbol , time:utcTimestamp() as utcTimestamp insert into OutputStream; The query returns the symbol in the 'InputStream', and the system time stamp in 'yyyy-MM-dd HH:mm:ss' format as 'utcTimestamp', to the 'OutputStream'.","title":"utcTimestamp (Function)"},{"location":"api/5.0.2/","text":"API Docs - v5.0.2 Tested Siddhi Core version: 5.0.0 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No No unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', 'yyyy-MM-dd HH:mm:ss', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No No date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No No unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . utcTimestamp (Function) Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"5.0.2"},{"location":"api/5.0.2/#api-docs-v502","text":"Tested Siddhi Core version: 5.0.0 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.2"},{"location":"api/5.0.2/#time","text":"","title":"Time"},{"location":"api/5.0.2/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.2/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.2/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.2/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.2/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No No unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.2/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2, LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', 'yyyy-MM-dd HH:mm:ss', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.2/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No No date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.2/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No No unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.2/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.2/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format, LONG timestamp.in.milliseconds) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.2/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes No date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes No Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.2/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"utcTimestamp (Function)"},{"location":"api/5.0.3/","text":"API Docs - v5.0.3 Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . utcTimestamp (Function) Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"5.0.3"},{"location":"api/5.0.3/#api-docs-v503","text":"Tested Siddhi Core version: 5.0.2 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.3"},{"location":"api/5.0.3/#time","text":"","title":"Time"},{"location":"api/5.0.3/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.3/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.3/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.3/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.3/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.3/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.3/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.3/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.3/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.3/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.3/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.3/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"utcTimestamp (Function)"},{"location":"api/5.0.4/","text":"API Docs - v5.0.4 Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . utcTimestamp (Function) Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"5.0.4"},{"location":"api/5.0.4/#api-docs-v504","text":"Tested Siddhi Core version: 5.1.5 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.4"},{"location":"api/5.0.4/#time","text":"","title":"Time"},{"location":"api/5.0.4/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.4/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.4/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.4/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.4/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.4/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.4/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.4/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.4/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.4/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.4/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.4/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"utcTimestamp (Function)"},{"location":"api/5.0.5/","text":"API Docs - v5.0.5 Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . utcTimestamp (Function) Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"5.0.5"},{"location":"api/5.0.5/#api-docs-v505","text":"Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.5"},{"location":"api/5.0.5/#time","text":"","title":"Time"},{"location":"api/5.0.5/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.5/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.5/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.5/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.5/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.5/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.5/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.5/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.5/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.5/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.5/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.5/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format. Syntax STRING time:utcTimestamp() Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 .","title":"utcTimestamp (Function)"},{"location":"api/5.0.6/","text":"API Docs - v5.0.6 Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . utcTimestamp (Function) Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"5.0.6"},{"location":"api/5.0.6/#api-docs-v506","text":"Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.6"},{"location":"api/5.0.6/#time","text":"","title":"Time"},{"location":"api/5.0.6/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.6/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.6/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.6/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.6/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.6/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.6/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.6/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.6/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.6/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.6/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.6/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"utcTimestamp (Function)"},{"location":"api/5.0.7/","text":"API Docs - v5.0.7 Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . timezoneConvert (Function) Converts source datetime to provided target timezone and return the datetime string Syntax STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone) STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone, STRING source.timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date with time. For example, 2014-11-11 13:23:44.657 , 2014-11-11 05:23:44 , 2014/11/11 24:10:44.657 . - STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . This is mandatory if you want to convert to different timezone - STRING No Yes target.timezone The timezone to which the target date need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here - STRING No Yes source.timezone The timezone to which the source time points to. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes Yes Examples EXAMPLE 1 time:timezoneConvert('2014/11/11 13:23:44','yyyy/MM/dd HH:mm:ss','UTC', 'IST') Converts datetime based on the target timezone UTC considering given source timizone IST and returns 2014/11/11 07:53:44 . EXAMPLE 2 time:timezoneConvert('2020-11-11 06:23:44', 'yyyy/MM/dd HH:mm:ss', 'CST') Converts datetime based on the target timezone CST and since source timezone is not given it will take system timezone as default and returns 2020-11-11 00:53:44 . utcTimestamp (Function) Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"5.0.7"},{"location":"api/5.0.7/#api-docs-v507","text":"Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.7"},{"location":"api/5.0.7/#time","text":"","title":"Time"},{"location":"api/5.0.7/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/5.0.7/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/5.0.7/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/5.0.7/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/5.0.7/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/5.0.7/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/5.0.7/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/5.0.7/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/5.0.7/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/5.0.7/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/5.0.7/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/5.0.7/#timezoneconvert-function","text":"Converts source datetime to provided target timezone and return the datetime string Syntax STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone) STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone, STRING source.timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date with time. For example, 2014-11-11 13:23:44.657 , 2014-11-11 05:23:44 , 2014/11/11 24:10:44.657 . - STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . This is mandatory if you want to convert to different timezone - STRING No Yes target.timezone The timezone to which the target date need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here - STRING No Yes source.timezone The timezone to which the source time points to. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes Yes Examples EXAMPLE 1 time:timezoneConvert('2014/11/11 13:23:44','yyyy/MM/dd HH:mm:ss','UTC', 'IST') Converts datetime based on the target timezone UTC considering given source timizone IST and returns 2014/11/11 07:53:44 . EXAMPLE 2 time:timezoneConvert('2020-11-11 06:23:44', 'yyyy/MM/dd HH:mm:ss', 'CST') Converts datetime based on the target timezone CST and since source timezone is not given it will take system timezone as default and returns 2020-11-11 00:53:44 .","title":"timezoneConvert (Function)"},{"location":"api/5.0.7/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"utcTimestamp (Function)"},{"location":"api/latest/","text":"API Docs - v5.0.7 Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions. Time currentDate (Function) Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 . currentTime (Function) Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 . currentTimestamp (Function) When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) date (Function) Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 . dateAdd (Function) Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string . dateDiff (Function) Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 . dateFormat (Function) Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 . dateSub (Function) Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string . dayOfWeek (Function) Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday . extract (Function) Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 . timestampInMilliseconds (Function) Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 . timezoneConvert (Function) Converts source datetime to provided target timezone and return the datetime string Syntax STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone) STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone, STRING source.timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date with time. For example, 2014-11-11 13:23:44.657 , 2014-11-11 05:23:44 , 2014/11/11 24:10:44.657 . - STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . This is mandatory if you want to convert to different timezone - STRING No Yes target.timezone The timezone to which the target date need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here - STRING No Yes source.timezone The timezone to which the source time points to. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes Yes Examples EXAMPLE 1 time:timezoneConvert('2014/11/11 13:23:44','yyyy/MM/dd HH:mm:ss','UTC', 'IST') Converts datetime based on the target timezone UTC considering given source timizone IST and returns 2014/11/11 07:53:44 . EXAMPLE 2 time:timezoneConvert('2020-11-11 06:23:44', 'yyyy/MM/dd HH:mm:ss', 'CST') Converts datetime based on the target timezone CST and since source timezone is not given it will take system timezone as default and returns 2020-11-11 00:53:44 . utcTimestamp (Function) Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"latest"},{"location":"api/latest/#api-docs-v507","text":"Tested Siddhi Core version: 5.1.13 It could also support other Siddhi Core minor versions.","title":"API Docs - v5.0.7"},{"location":"api/latest/#time","text":"","title":"Time"},{"location":"api/latest/#currentdate-function","text":"Function returns the system time in yyyy-MM-dd format. Syntax STRING time:currentDate() Examples EXAMPLE 1 time:currentDate() Returns the current date in the yyyy-MM-dd format, such as 2019-06-21 .","title":"currentDate (Function)"},{"location":"api/latest/#currenttime-function","text":"Function returns system time in the HH:mm:ss format. Syntax STRING time:currentTime() Examples EXAMPLE 1 time:currentTime() Returns the current date in the HH:mm:ss format, such as 15:23:24 .","title":"currentTime (Function)"},{"location":"api/latest/#currenttimestamp-function","text":"When no argument is provided, function returns the system current timestamp in yyyy-MM-dd HH:mm:ss format, and when a timezone is provided as an argument, it converts and return the current system time to the given timezone format. Syntax STRING time:currentTimestamp() STRING time:currentTimestamp( STRING timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic timezone The timezone to which the current time need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes No Examples EXAMPLE 1 time:currentTimestamp() Returns current system time in yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 14:07:00 . EXAMPLE 2 time:currentTimestamp('Asia/Kolkata') Returns current system time converted to 'Asia/Kolkata' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 19:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html) EXAMPLE 3 time:currentTimestamp('CST') Returns current system time converted to 'CST' timezone yyyy-MM-dd HH:mm:ss format, such as 2019-03-31 02:07:00 . Get the supported timezone IDs from [here](https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html)","title":"currentTimestamp (Function)"},{"location":"api/latest/#date-function","text":"Extracts the date part of a date or date-time and return it in yyyy-MM-dd format. Syntax STRING time:date( STRING date.value, STRING date.format) STRING time:date( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/11/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns 2014-11-11 . EXAMPLE 2 time:date('2014-11-23 13:23:44.345') Extracts the date and returns 2014-11-13 . EXAMPLE 3 time:date('13:23:44', 'HH:mm:ss') Extracts the date and returns 1970-01-01 .","title":"date (Function)"},{"location":"api/latest/#dateadd-function","text":"Adds the specified time interval to a date. Syntax STRING time:dateAdd( STRING date.value, INT expr, STRING unit) STRING time:dateAdd( LONG timestamp.in.milliseconds, INT expr, STRING unit) STRING time:dateAdd( STRING date.value, INT expr, STRING unit, STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be incremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 . EXAMPLE 2 time:dateAdd('2014-11-11 13:23:44.657', 5, 'YEAR') Adds five years to the given date value and returns 2019-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateAdd( 1415712224000L, 1, 'HOUR') Adds one hour and 1415715824000 as a string .","title":"dateAdd (Function)"},{"location":"api/latest/#datediff-function","text":"Returns difference between two dates in days. Syntax INT time:dateDiff( STRING date.value1, STRING date.value2, STRING date.format1, STRING date.format2) INT time:dateDiff( STRING date.value1, STRING date.value2) INT time:dateDiff( LONG timestamp.in.milliseconds1, LONG timestamp.in.milliseconds2) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value1 The value of the first date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.value2 The value of the second date parameter. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format1 The format of the first date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes date.format2 The format of the second date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds1 The first date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes timestamp.in.milliseconds2 The second date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateDiff('2014-11-11 13:23:44', '2014-11-9 13:23:44', 'yyyy-MM-dd HH:mm:ss', 'yyyy-MM-dd HH:mm:ss') Returns the date difference between the two given dates as 2 . EXAMPLE 2 time:dateDiff('2014-11-13 13:23:44', '2014-11-9 13:23:44') Returns the date difference between the two given dates as 4 . EXAMPLE 3 time:dateDiff(1415692424000L, 1412841224000L) Returns the date difference between the two given dates as 33 .","title":"dateDiff (Function)"},{"location":"api/latest/#dateformat-function","text":"Formats the data in string or milliseconds format to the given date format. Syntax STRING time:dateFormat( STRING date.value, STRING date.target.format, STRING date.source.format) STRING time:dateFormat( STRING date.value, STRING date.target.format) STRING time:dateFormat( LONG timestamp.in.milliseconds, STRING date.target.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.target.format The format of the date into which the date value needs to be converted. For example, yyyy/MM/dd HH:mm:ss . STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds from the epoch. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateFormat('2014/11/11 13:23:44', 'mm:ss', 'yyyy/MM/dd HH:mm:ss') Converts date based on the target date format mm:ss and returns 23:44 . EXAMPLE 2 time:dateFormat('2014-11-11 13:23:44', 'HH:mm:ss') Converts date based on the target date format HH:mm:ss and returns 13:23:44 . EXAMPLE 3 time:dateFormat(1415692424000L, 'yyyy-MM-dd') Converts date in millisecond based on the target date format yyyy-MM-dd and returns 2014-11-11 .","title":"dateFormat (Function)"},{"location":"api/latest/#datesub-function","text":"Subtracts the specified time interval from the given date. Syntax STRING time:dateSub( STRING date.value, INT expr, STRING unit) STRING time:dateSub( STRING date.value, INT expr, STRING unit, STRING date.format) STRING time:dateSub( LONG timestamp.in.milliseconds, INT expr, STRING unit) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes expr The amount by which the selected part of the date should be decremented. For example 2 , 5 , 10 , etc. INT No Yes unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes Examples EXAMPLE 1 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR', 'yyyy-MM-dd HH:mm:ss.SSS') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 . EXAMPLE 2 time:dateSub('2019-11-11 13:23:44.657', 5, 'YEAR') Subtracts five years to the given date value and returns 2014-11-11 13:23:44.657 using the default date.format yyyy-MM-dd HH:mm:ss.SSS . EXAMPLE 3 time:dateSub( 1415715824000L, 1, 'HOUR') Subtracts one hour and 1415712224000 as a string .","title":"dateSub (Function)"},{"location":"api/latest/#dayofweek-function","text":"Extracts the day on which a given date falls. Syntax STRING time:dayOfWeek( STRING date.value, STRING date.format) STRING time:dayOfWeek( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . STRING No Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:date('2014/12/11 13:23:44', 'yyyy/MM/dd HH:mm:ss') Extracts the date and returns Thursday . EXAMPLE 2 time:date('2014-11-11 13:23:44.345') Extracts the date and returns Tuesday .","title":"dayOfWeek (Function)"},{"location":"api/latest/#extract-function","text":"Function extracts a date unit from the date. Syntax INT time:extract( STRING unit, STRING date.value) INT time:extract( STRING unit, STRING date.value, STRING date.format) INT time:extract( STRING unit, STRING date.value, STRING date.format, STRING locale) INT time:extract( LONG timestamp.in.milliseconds, STRING unit) INT time:extract( LONG timestamp.in.milliseconds, STRING unit, STRING locale) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic unit This is the part of the date that needs to be modified. For example, MINUTE , HOUR , MONTH , YEAR , QUARTER , WEEK , DAY , SECOND . STRING No No date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . - STRING Yes Yes date.format The format of the date value provided. For example, yyyy-MM-dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes timestamp.in.milliseconds The date value in milliseconds. For example, 1415712224000L . - LONG Yes Yes locale Represents a specific geographical, political or cultural region. For example en_US and fr_FR Current default locale set in the Java Virtual Machine. STRING Yes No Examples EXAMPLE 1 time:extract('YEAR', '2019/11/11 13:23:44.657', 'yyyy/MM/dd HH:mm:ss.SSS') Extracts the year amount and returns 2019 . EXAMPLE 2 time:extract('DAY', '2019-11-12 13:23:44.657') Extracts the day amount and returns 12 . EXAMPLE 3 time:extract(1394556804000L, 'HOUR') Extracts the hour amount and returns 22 .","title":"extract (Function)"},{"location":"api/latest/#timestampinmilliseconds-function","text":"Returns the system time or the given time in milliseconds. Syntax LONG time:timestampInMilliseconds() LONG time:timestampInMilliseconds( STRING date.value, STRING date.format) LONG time:timestampInMilliseconds( STRING date.value) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date. For example, 2014-11-11 13:23:44.657 , 2014-11-11 , 13:23:44.657 . Current system time STRING Yes Yes date.format The format of the date value provided. For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss.SSS STRING Yes Yes Examples EXAMPLE 1 time:timestampInMilliseconds() Returns the system current time in milliseconds. EXAMPLE 2 time:timestampInMilliseconds('2007-11-30 10:30:19', 'yyyy-MM-DD HH:MM:SS') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:SS format to milliseconds as 1170131400019 . EXAMPLE 3 time:timestampInMilliseconds('2007-11-30 10:30:19.000') Converts 2007-11-30 10:30:19 in yyyy-MM-DD HH:MM:ss.SSS format to milliseconds as 1196398819000 .","title":"timestampInMilliseconds (Function)"},{"location":"api/latest/#timezoneconvert-function","text":"Converts source datetime to provided target timezone and return the datetime string Syntax STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone) STRING time:timezoneConvert( STRING date.value, STRING date.source.format, STRING target.timezone, STRING source.timezone) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.value The value of the date with time. For example, 2014-11-11 13:23:44.657 , 2014-11-11 05:23:44 , 2014/11/11 24:10:44.657 . - STRING No Yes date.source.format The format input date.value.For example, yyyy-MM-dd HH:mm:ss.SSS . This is mandatory if you want to convert to different timezone - STRING No Yes target.timezone The timezone to which the target date need to be converted. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here - STRING No Yes source.timezone The timezone to which the source time points to. For example, Asia/Kolkata , PST . Get the supported timezone IDs from here System timezone STRING Yes Yes Examples EXAMPLE 1 time:timezoneConvert('2014/11/11 13:23:44','yyyy/MM/dd HH:mm:ss','UTC', 'IST') Converts datetime based on the target timezone UTC considering given source timizone IST and returns 2014/11/11 07:53:44 . EXAMPLE 2 time:timezoneConvert('2020-11-11 06:23:44', 'yyyy/MM/dd HH:mm:ss', 'CST') Converts datetime based on the target timezone CST and since source timezone is not given it will take system timezone as default and returns 2020-11-11 00:53:44 .","title":"timezoneConvert (Function)"},{"location":"api/latest/#utctimestamp-function","text":"Function returns the system current time in UTC timezone with given date format which defaults to yyyy-MM-dd HH:mm:ss if not provided. Syntax STRING time:utcTimestamp() STRING time:utcTimestamp( STRING date.format) QUERY PARAMETERS Name Description Default Value Possible Data Types Optional Dynamic date.format The format of the date value provided.This date format can be anything which complies to SimpleDateFormat compatible patterns.For example, yyyy/MM/dd HH:mm:ss.SSS . yyyy-MM-dd HH:mm:ss STRING Yes Yes Examples EXAMPLE 1 time:utcTimestamp() Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss format, and a sample output will be like 2019-07-03 09:58:34 . EXAMPLE 2 time:utcTimestamp('yyyy-MM-DD HH:MM:ss.SSS') Returns the system current time in UTC timezone with yyyy-MM-dd HH:mm:ss.SSS format, and a sample output will be like 2020-07-15 10:49:41.103 .","title":"utcTimestamp (Function)"}]}